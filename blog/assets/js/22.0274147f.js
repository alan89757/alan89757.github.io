(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{581:function(t,s,a){t.exports=a.p+"assets/img/153.677e5791.png"},636:function(t,s,a){"use strict";a.r(s);var r=a(19),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("浏览器缓存策略")]),t._v(" "),r("h2",{attrs:{id:"为什么需要浏览器缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么需要浏览器缓存"}},[t._v("#")]),t._v(" 为什么需要浏览器缓存")]),t._v(" "),r("ol",[r("li",[t._v("客户端(浏览器)和服务器通过http协议建立连接需要消耗时间")]),t._v(" "),r("li",[t._v("服务器和客户端(浏览器)数据传输也需要消耗较多时间")])]),t._v(" "),r("p",[r("em",[t._v("我们该如何减少获取资源的时长???")])]),t._v(" "),r("p",[t._v("解决思路: 请求本地资源比远程资源更快，重用以前传输过的数据来提升访问性能")]),t._v(" "),r("h2",{attrs:{id:"你会怎么设计浏览器缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#你会怎么设计浏览器缓存"}},[t._v("#")]),t._v(" 你会怎么设计浏览器缓存")]),t._v(" "),r("p",[t._v("设计逻辑: 浏览器在本地已缓存数据，直接用本地缓存数据。没有再去远程服务器获取资源。")]),t._v(" "),r("h2",{attrs:{id:"浏览器缓存实现"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#浏览器缓存实现"}},[t._v("#")]),t._v(" 浏览器缓存实现")]),t._v(" "),r("p",[t._v("如下图:\n"),r("img",{attrs:{src:a(581)}})]),t._v(" "),r("h3",{attrs:{id:"强制缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 强制缓存")]),t._v(" "),r("p",[t._v("浏览器使用了本地缓存的数据")]),t._v(" "),r("h4",{attrs:{id:"是否使用浏览器缓存数据"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#是否使用浏览器缓存数据"}},[t._v("#")]),t._v(" 是否使用浏览器缓存数据")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" cache"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("control"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" max"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("age"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("   "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTTP 1.1版本， 缓存时长300秒")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Expires")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Wed"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("01")]),t._v(" Feb "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("41")]),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("03")]),t._v(" "),r("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GMT")]),t._v("  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTTP 1.0版本， 缓存有效期, 具体的时间")]),t._v("\n")])])]),r("p",[t._v("cache-control优先级大于Expires\ncache-control属于http协议1.1版本的响应头\nExpires属于http协议1.0版本的响应头")]),t._v(" "),r("h3",{attrs:{id:"协商缓存"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),r("p",[t._v("强制缓存过期时, 去请求服务器资源，通过对比看缓存是否过期. 未过期返回304, 告诉浏览器缓存未过期，可以直接使用浏览器缓存. 过期返回200，响应体返回服务器最新资源.")]),t._v(" "),r("h4",{attrs:{id:"对比缓存是否过期"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#对比缓存是否过期"}},[t._v("#")]),t._v(" 对比缓存是否过期")]),t._v(" "),r("div",{staticClass:"language-js extra-class"},[r("pre",{pre:!0,attrs:{class:"language-js"}},[r("code",[r("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" Etag "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" If"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("None"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Match  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTTP 1.1版本， Etag是否更新, 每次文件更新都会产生一个唯一hash值")]),t._v("\n"),r("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" Last"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified "),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" If"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Modified"),r("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Since  "),r("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// HTTP 1.0版本, 文件上次更新日期")]),t._v("\n")])])]),r("p",[t._v("Etag的优先级大于Last-Modified")])])}),[],!1,null,null,null);s.default=e.exports}}]);